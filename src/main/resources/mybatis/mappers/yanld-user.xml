<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanld.module.common.dal.mapper.YanldUserMapper">
    <resultMap id="yanldUserResult" type="com.yanld.module.common.dal.dataobject.YanldUserDO" >
        <result property="id" column="id"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="user_name" property="userName"/>
        <result column="user_password" property="userPassword"/>
        <result column="last_login_time" property="lastLoginTime"/>
    </resultMap>
    <sql id="fields">
        `id`,
        create_time,
        modify_time,
        is_deleted,
        user_name,
        user_password,
        last_login_time
    </sql>

    <insert id="insertUser" parameterType="map">
        insert into yanld_user(
        <include refid="fields"/>
        )
        values (
        #{id},
        now(),
        now(),
        0,
        #{userName},
        #{userPassword},
        #{lastLoginTime}
        )
    </insert>

    <delete id="deleteUser" parameterType="long">
        delete from yanld_user
        where `id` = #{id}
    </delete>

    <update id="logicDeleteUser" parameterType="map">
        update yanld_user
        set
        modify_time=now(),
        is_deleted=1
        where
        `id`=#{id}
    </update>

    <update id="updateUser" parameterType="map">
        update yanld_user
        set
        modify_time=now(),
        user_name=#{userName},
        user_password=#{userPassword},
        last_login_time=#{lastLoginTime}
        where
        `id`=#{id}
    </update>

    <select id="selectUser" parameterType="long" resultMap="yanldUserResult">
        select
        <include refid="fields"/>
        from yanld_user
        where
        is_deleted=0
        and
        `id`=#{id}
    </select>

    <select id="selectUsers" parameterType="map" resultMap="yanldUserResult">
        select
        <include refid="fields"/>
        from yanld_user
        <where>
            is_deleted=0
            <if test="userName != null">
                AND user_name= #{userName}
            </if>
            <if test="userPassword != null">
                AND user_password= #{userPassword}
            </if>
            <if test="limit != 0">
                LIMIT #{limit} OFFSET #{offset}
            </if>
        </where>
    </select>

    <select id="selectUsersByIds" parameterType="map" resultMap="yanldUserResult">
        select
        <include refid="fields"/>
        from yanld_user
        <if test="ids != null">
            <where>
                id IN
                <foreach item="userId" collection="ids"
                         open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </where>
        </if>
    </select>

    <select id="selectUserCount" parameterType="map" resultType="long">
        select count(1) from yanld_user
        <where>
            is_deleted=0
        </where>
    </select>

    <!--添加用户登录验证信息-->
    <select id="selectUserQuery" parameterType="map" resultMap="yanldUserResult">
        select
        <include refid="fields"/>
        from yanld_user
        <where>
            is_deleted=0
            <if test="userName != null">
                AND user_name= #{userName}
            </if>
            <if test="userPassword != null">
                AND user_password= #{userPassword}
            </if>
        </where>
    </select>

</mapper>