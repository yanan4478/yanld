{
  "name": "history",
  "version": "1.12.5",
  "description": "A minimal, functional history implementation for JavaScript",
  "main": "lib/index",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rackt/history.git"
  },
  "bugs": {
    "url": "https://github.com/rackt/history/issues"
  },
  "scripts": {
    "build": "babel ./modules --stage 0 --loose all -d lib --ignore '__tests__'",
    "build-umd": "NODE_ENV=production webpack modules/index.js umd/History.js",
    "build-min": "NODE_ENV=production webpack -p modules/index.js umd/History.min.js",
    "lint": "eslint modules",
    "start": "webpack-dev-server -d --content-base ./ --history-api-fallback --inline modules/index.js",
    "test": "npm run lint && karma start",
    "postinstall": "node npm-scripts/postinstall.js"
  },
  "authors": [
    "Michael Jackson"
  ],
  "license": "MIT",
  "dependencies": {
    "deep-equal": "^1.0.0",
    "invariant": "^2.0.0",
    "qs": "^4.0.0",
    "warning": "^2.0.0"
  },
  "devDependencies": {
    "assert": "1.3.0",
    "babel": "^5.4.7",
    "babel-core": "^5.4.7",
    "babel-eslint": "^3.1.23",
    "babel-loader": "^5.0.0",
    "eslint": "1.4.1",
    "eslint-plugin-react": "3.3.2",
    "expect": "^1.12.0",
    "gzip-size": "^3.0.0",
    "karma": "^0.13.3",
    "karma-browserstack-launcher": "^0.1.3",
    "karma-chrome-launcher": "^0.2.0",
    "karma-firefox-launcher": "^0.1.6",
    "karma-mocha": "^0.2.0",
    "karma-mocha-reporter": "^1.0.4",
    "karma-sourcemap-loader": "^0.3.5",
    "karma-webpack": "^1.7.0",
    "mocha": "^2.0.1",
    "pretty-bytes": "^2.0.1",
    "rimraf": "^2.4.2",
    "webpack": "^1.4.13",
    "webpack-dev-server": "^1.10.1"
  },
  "tags": [
    "history",
    "location"
  ],
  "keywords": [
    "history",
    "location"
  ],
  "gitHead": "6e1838a0460f57b161eec993b332797c7e41d417",
  "homepage": "https://github.com/rackt/history#readme",
  "_id": "history@1.12.5",
  "_shasum": "8e97f87b11c435fb1e2e57c9d9e91d2ce499588b",
  "_from": "node_modules/history",
  "_npmVersion": "3.3.1",
  "_nodeVersion": "0.12.7",
  "_npmUser": {
    "name": "mjackson",
    "email": "mjijackson@gmail.com"
  },
  "dist": {
    "shasum": "48ceb881a8903fb9e576dd4d04303dd80f2edc63",
    "tarball": "http://registry.npmjs.org/history/-/history-1.12.5.tgz"
  },
  "maintainers": [
    {
      "name": "mjackson",
      "email": "mjijackson@gmail.com"
    },
    {
      "name": "ryanflorence",
      "email": "rpflorence@gmail.com"
    }
  ],
  "directories": {},
  "_resolved": "file:node_modules/history",
  "readme": "# history\n\n[![build status](https://img.shields.io/travis/rackt/history/master.svg?style=flat-square)](https://travis-ci.org/rackt/history)\n[![npm package](https://img.shields.io/npm/v/history.svg?style=flat-square)](https://www.npmjs.org/package/history)\n[![react-router channel on slack](https://img.shields.io/badge/slack-react--router@reactiflux-61DAFB.svg?style=flat-square)](http://www.reactiflux.com)\n\n[`history`](https://www.npmjs.com/package/history) is a JavaScript library that lets you easily manage session history in browsers, testing environments, and (soon, via [React Native](https://facebook.github.io/react-native/)) native devices. `history` abstracts away the differences in these different platforms and provides a minimal API that lets you manage the history stack, navigate, confirm navigation, and persist state between sessions. `history` is library-agnostic and may easily be included in any JavaScript project.\n\n## Installation\n\nUsing [npm](https://www.npmjs.org/):\n\n    $ npm install history\n\nThen with a module bundler like [webpack](https://webpack.github.io/), use as you would anything else:\n\n```js\n// using an ES6 transpiler, like babel\nimport { createHistory } from 'history'\n\n// not using an ES6 transpiler\nvar createHistory = require('history').createHistory\n```\n\n## Basic Usage\n\nA \"history\" encapsulates navigation between different screens in your app, and notifies listeners when the current screen changes.\n\n```js\nimport { createHistory } from 'history'\n\nlet history = createHistory()\n\n// Listen for changes to the current location. The\n// listener is called once immediately.\nlet unlisten = history.listen(location => {\n  console.log(location.pathname)\n})\n\nhistory.pushState({ the: 'state' }, '/the/path?a=query')\n\n// When you're finished, stop the listener.\nunlisten()\n```\n\nYou can find many more examples [in the documentation](https://github.com/rackt/history/tree/master/docs)!\n\n## Thanks\n\nA big thank-you to [Dan Shaw](https://www.npmjs.com/~dshaw) for letting us use the `history` npm package name! Thanks Dan!\n\nAlso, thanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to run our build in real browsers.\n",
  "readmeFilename": "README.md"
}
